# version: '3.8'

services:
  # --- DATABASES ---
  auth-postgres-db:
    image: postgres:13
    container_name: auth-postgres-db
    environment:
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: auth_password
      POSTGRES_DB: auth_db
    ports:
      - "5432:5432" # Host port 5432 mapped to Auth DB
    volumes:
      - auth-db-data:/var/lib/postgresql/data
      - ./auth-service/src/main/resources/db/init-data.sql:/docker-entrypoint-initdb.d/01-init-data.sql
    networks:
      - clinic-network

  patient-postgres-db:
    image: postgres:13
    container_name: patient-postgres-db
    environment:
      POSTGRES_USER: patient_user
      POSTGRES_PASSWORD: patient_password
      POSTGRES_DB: patient_db
    ports:
      - "5433:5432" # Host port 5433 mapped to Patient DB
    volumes:
      - patient-db-data:/var/lib/postgresql/data
    networks:
      - clinic-network

  appointment-postgres-db:
      image: postgres:13
      container_name: appointment-postgres-db
      environment:
        POSTGRES_USER: appointment_user
        POSTGRES_PASSWORD: appointment_password
        POSTGRES_DB: appointment_db
      ports:
        - "5434:5432" # Host port 5434 mapped to Appointment DB
      volumes:
        - appointment-db-data:/var/lib/postgresql/data
      networks:
        - clinic-network

  # --- MESSAGE BROKER ---
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"   # AMQP protocol for services
      - "15672:15672" # Management UI (http://localhost:15672)
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - clinic-network

  # --- MICROSERVICES ---
  auth-service:
    build: ./auth-service # Tells Docker to build the image using the Dockerfile in the auth-service directory
    container_name: auth-service
    ports:
      - "8081:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://auth-postgres-db:5432/auth_db
      SPRING_DATASOURCE_USERNAME: auth_user
      SPRING_DATASOURCE_PASSWORD: auth_password
      JWT_SECRET: 37adf561500e6dacb4e9311d363e47a9789ce80f28a35d2cc0f935c24213d533
    healthcheck:
      test: ["CMD-SHELL", "exit 0"] # This always returns "healthy"
      interval: 5s
      timeout: 3s
      retries: 1
    depends_on:
      - auth-postgres-db
    networks:
      - clinic-network

  patient-service:
    build: ./patient-management-service
    container_name: patient-service
    ports:
      - "8082:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://patient-postgres-db:5432/patient_db
      SPRING_DATASOURCE_USERNAME: patient_user
      SPRING_DATASOURCE_PASSWORD: patient_password
      JWT_SECRET: 37adf561500e6dacb4e9311d363e47a9789ce80f28a35d2cc0f935c24213d533
    depends_on:
      patient-postgres-db: # Long syntax for DB
        condition: service_started # This is the default
      auth-service:        # Long syntax for auth-service
        condition: service_healthy
    networks:
      - clinic-network

  appointment-service:
    build: ./appointment-service
    container_name: appointment-service
    ports:
      - "8083:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://appointment-postgres-db:5432/appointment_db
      SPRING_DATASOURCE_USERNAME: appointment_user
      SPRING_DATASOURCE_PASSWORD: appointment_password
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
      PATIENT_SERVICE_URL: http://patient-service:8082
      JWT_SECRET: 37adf561500e6dacb4e9311d363e47a9789ce80f28a35d2cc0f935c24213d533
    depends_on:
      - appointment-postgres-db
      - rabbitmq
      - patient-service
    networks:
      - clinic-network

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"  
    environment:
      JWT_SECRET: 37adf561500e6dacb4e9311d363e47a9789ce80f28a35d2cc0f935c24213d533 
    depends_on:
      - auth-service
      - patient-service
      - appointment-service
    networks:
      - clinic-network

volumes:
  auth-db-data:
  patient-db-data:
  appointment-db-data:
  rabbitmq-data:

networks:
  clinic-network:
    driver: bridge